snippet for "for loop" b
for ${1:var} in ${2:iterator}:
    $0
endsnippet

snippet fori "for with index" b
for i, ${1:var} in enumerate(${2:iterator}):
    ${0:pass}
endsnippet

snippet "\[(.+) sl" "String list" r
`!p
items = match.group(1).split(' ')
new_list = []
for item in items:
    if item.endswith(','):
        item = item[:-1]
    new_list.append("'{0}'".format(item))
snip.rv = '[' + ', '.join(new_list)
`
endsnippet

snippet dd "Dictionary" b
${1:dictName} = {$2}$0
endsnippet

snippet kw "Keyword argument" i
${1:name}=${2:$1},$0
endsnippet

snippet ds "Method" !b
def ${1:name}(self$2):
    ${0:pass}
endsnippet

priority 1
snippet d "Function without docstrings" !b
def ${1:name}($2):
    ${0:pass}
endsnippet

snippet dt "Test method" !b
def test_${1:name}(self):
    ${0:pass}
endsnippet

priority -1
snippet d "Dictionary key-value pair" w
'${1:name}': '${2:value}',$0
endsnippet

snippet dv "Dictionary with vars as key/value" w
${1:key}: ${2:value},$0
endsnippet

snippet @ "Decorator" b
@${1:decorated_func}($2)
def ${3:decorator_func}($4):
${5:    '''${6:Docstring}'''
}    ${0:pass}
endsnippet

snippet @s "Static method" !b
@staticmethod
endsnippet

snippet pr "Poor man's debugger" b
print
print ${1:var}
raise Exception
endsnippet

snippet r "Raise an exception" b
raise ${2:Exception}($1)$0
endsnippet

snippet et "Import etree" b
from lxml import etree
endsnippet

snippet ets "etree to string" b
print etree.tostring(${1:element})$0
endsnippet

snippet "W$" "Disable all warnings for current line" r
# noqa
endsnippet

snippet " py?l$" "Disable a pylint warning" r
  # pylint: disable=${1:warning}
endsnippet

snippet open "Open a file" !b
with open('${1:name}', '${2:r}') as f:
    ${3:pass}
endsnippet

snippet ow "Open a file for writing" !b
with open('${1:name}', 'w') as f:
    ${3:f.write($2)}
    $0
endsnippet

snippet False "Toggle False" w
True
endsnippet

snippet True "Toggle True" w
False
endsnippet
